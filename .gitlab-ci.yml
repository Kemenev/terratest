stages:
  - validate
  - plan
  - apply

variables:
  TF_BACKEND_ADDRESS: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/terraform/state/$CI_COMMIT_REF_NAME"
  TF_BACKEND_LOCK: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/terraform/state/$CI_COMMIT_REF_NAME/lock"

.tf_job: &tf_job
  image: alpine/terragrunt:1.12.2
  tags:
    - docker
  before_script:
    - unzip -o terraform-plugins.zip
    - export TF_VAR_vsphere_password=$(echo "$TF_VAR_vsphere_password" | base64 -d)
    - mkdir -p ~/.terraform.d/plugins/registry.terraform.io/hashicorp/vsphere/2.15.0/linux_amd64
    - mkdir -p ~/.terraform.d/plugins/registry.terraform.io/e-breuninger/netbox/5.0.0/linux_amd64
    - cp terraform-plugins/registry.terraform.io/hashicorp/vsphere/2.15.0/terraform-provider-vsphere_v2.15.0 ~/.terraform.d/plugins/registry.terraform.io/hashicorp/vsphere/2.15.0/linux_amd64
    - cp terraform-plugins/registry.terraform.io/e-breuninger/netbox/5.0.0/linux_amd64/terraform-provider-netbox_v5.0.0 ~/.terraform.d/plugins/registry.terraform.io/e-breuninger/netbox/5.0.0/linux_amd64
    - chmod +x ~/.terraform.d/plugins/registry.terraform.io/hashicorp/vsphere/2.15.0/linux_amd64/terraform-provider-vsphere_v2.15.0
    - chmod +x ~/.terraform.d/plugins/registry.terraform.io/e-breuninger/netbox/5.0.0/linux_amd64/terraform-provider-netbox_v5.0.0
    - echo "$NETBOX_CERT" > /usr/local/share/ca-certificates/netbox.crt
    - update-ca-certificates
    - terraform init \
        -backend-config="address=$TF_BACKEND_ADDRESS" \
        -backend-config="lock_address=$TF_BACKEND_LOCK" \
        -backend-config="unlock_address=$TF_BACKEND_LOCK" \
        -backend-config="username=gitlab-ci-token" \
        -backend-config="password=$CI_JOB_TOKEN"

validate:
  <<: *tf_job
  stage: validate
  script:
    - terraform validate

plan:
  <<: *tf_job
  stage: plan
  script:
    - terraform plan -out=tfplan
    - terraform show -no-color tfplan > tfplan.txt
  artifacts:
    when: always
    paths:
      - tfplan
      - tfplan.txt
      - .terraform.lock.hcl
      - .terraform
      - tf-debug.log
    expire_in: 1 day

apply:
  <<: *tf_job
  stage: apply
  script:
    - terraform apply -auto-approve tfplan
  when: manual
  dependencies:
    - plan
  allow_failure: false
